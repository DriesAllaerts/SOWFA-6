#!/bin/bash
#SBATCH --job-name=runTutFarm
#SBATCH --output foam2run_startAt20000.log
#SBATCH --ntasks=288         # Change on setUp as well
#SBATCH --time=1-00
#SBATCH --account=mmc

source $HOME/.bash_profile
cores=$SLURM_NTASKS

echo "Working directory is" $SLURM_SUBMIT_DIR
echo "Job name is" $SLURM_JOB_NAME
echo "Submit time is" $(squeue -u $USER -o '%30j %20V' | grep -e $SLURM_JOB_NAME | awk '{print $2}')
echo "Starting OpenFOAM job at: " $(date)
echo "using" $cores "core(s)"

# ******************************************** USER INPUT ******************************************** #
OpenFOAM-6-gcc-dev              # OpenFOAM/SOWFA version. OpenFOAM-6-{gcc,intel}-{central,dev}
startTime=20000                 # Start time (cp script for restarted runs)
solver=superDeliciousVanilla
# **************************************************************************************************** #

# **************************************** PERFORM SOME CHECKS *************************************** #
if [ ! -f foam1preprocess.log ];                                   then echo "Job killed (1)."; scancel $SLURM_JOBID; fi
if [ ! -f system/controlDict.$solver.startAt$startTime ];          then echo "Job killed (2)."; scancel $SLURM_JOBID; fi
if [ ! -f setUp ];                                                 then echo "Job killed (3)."; scancel $SLURM_JOBID; fi
if [ $(foamDictionary -entry "nCores" -value setUp) -ne $cores ];  then echo "Job killed (4)."; scancel $SLURM_JOBID; fi
lastBdData=$(ls $(ls -d constant/boundaryData/* | head -1) | head -1)
endTime=$(foamDictionary -entry "endTime" -value -disableFunctionEntries system/controlDict.$solver.startAt$startTime)
if [ $lastBdData -lt $endTime ];                                   then echo "Job killed (5)."; scancel $SLURM_JOBID; fi
# **************************************************************************************************** #

# ************************************ COPYING APPROPRIATE FILES ************************************* #
cp system/controlDict.$solver.startAt$startTime        system/controlDict
# **************************************************************************************************** #

# Run the solver (parallel)
foamDictionary -entry "fieldAverages.timeStart" -set $startTime system/sampling/fieldAverages
foamDictionary -entry "fieldAverages.enabled" -set "true" system/sampling/fieldAverages
foamDictionary -entry "temporalAverages.timeStart" -set $startTime system/sampling/temporalAverages
foamDictionary -entry "temporalAverages.enabled" -set "true" system/sampling/temporalAverages
srun -n $cores --cpu_bind=cores $solver -parallel > log.2.$solver.startAt$startTime 2>&1

# Get some quantities from the logfile
grep -e "maximum"  -e "^time =" log.2.$solver.startat$starttime | awk ' nr%2 {printf "%.4f    \t", $3}  !(nr%2) {printf "%.4e \n", $2}' > log.maxlocalerror
grep -e "total - flux"  -e "^time =" log.2.$solver.startat$starttime | awk ' nr%2 {printf "%.4f    \t", $3}  !(nr%2) {printf "%.4e \n", $4}' > log.totalboundaryflux

echo "Ending OpenFOAM job at: " $(date)

# **************************************************************************************************** #
